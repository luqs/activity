package com.cuize.activity.dao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ShopActivityDrawExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public ShopActivityDrawExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andActivityIdIsNull() {
			addCriterion("activity_id is null");
			return (Criteria) this;
		}

		public Criteria andActivityIdIsNotNull() {
			addCriterion("activity_id is not null");
			return (Criteria) this;
		}

		public Criteria andActivityIdEqualTo(Integer value) {
			addCriterion("activity_id =", value, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdNotEqualTo(Integer value) {
			addCriterion("activity_id <>", value, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdGreaterThan(Integer value) {
			addCriterion("activity_id >", value, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("activity_id >=", value, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdLessThan(Integer value) {
			addCriterion("activity_id <", value, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdLessThanOrEqualTo(Integer value) {
			addCriterion("activity_id <=", value, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdIn(List<Integer> values) {
			addCriterion("activity_id in", values, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdNotIn(List<Integer> values) {
			addCriterion("activity_id not in", values, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdBetween(Integer value1, Integer value2) {
			addCriterion("activity_id between", value1, value2, "activityId");
			return (Criteria) this;
		}

		public Criteria andActivityIdNotBetween(Integer value1, Integer value2) {
			addCriterion("activity_id not between", value1, value2,
					"activityId");
			return (Criteria) this;
		}

		public Criteria andAwardNameIsNull() {
			addCriterion("award_name is null");
			return (Criteria) this;
		}

		public Criteria andAwardNameIsNotNull() {
			addCriterion("award_name is not null");
			return (Criteria) this;
		}

		public Criteria andAwardNameEqualTo(String value) {
			addCriterion("award_name =", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameNotEqualTo(String value) {
			addCriterion("award_name <>", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameGreaterThan(String value) {
			addCriterion("award_name >", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameGreaterThanOrEqualTo(String value) {
			addCriterion("award_name >=", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameLessThan(String value) {
			addCriterion("award_name <", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameLessThanOrEqualTo(String value) {
			addCriterion("award_name <=", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameLike(String value) {
			addCriterion("award_name like", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameNotLike(String value) {
			addCriterion("award_name not like", value, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameIn(List<String> values) {
			addCriterion("award_name in", values, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameNotIn(List<String> values) {
			addCriterion("award_name not in", values, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameBetween(String value1, String value2) {
			addCriterion("award_name between", value1, value2, "awardName");
			return (Criteria) this;
		}

		public Criteria andAwardNameNotBetween(String value1, String value2) {
			addCriterion("award_name not between", value1, value2, "awardName");
			return (Criteria) this;
		}

		public Criteria andTotalCountIsNull() {
			addCriterion("total_count is null");
			return (Criteria) this;
		}

		public Criteria andTotalCountIsNotNull() {
			addCriterion("total_count is not null");
			return (Criteria) this;
		}

		public Criteria andTotalCountEqualTo(Integer value) {
			addCriterion("total_count =", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountNotEqualTo(Integer value) {
			addCriterion("total_count <>", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountGreaterThan(Integer value) {
			addCriterion("total_count >", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("total_count >=", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountLessThan(Integer value) {
			addCriterion("total_count <", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountLessThanOrEqualTo(Integer value) {
			addCriterion("total_count <=", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountIn(List<Integer> values) {
			addCriterion("total_count in", values, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountNotIn(List<Integer> values) {
			addCriterion("total_count not in", values, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountBetween(Integer value1, Integer value2) {
			addCriterion("total_count between", value1, value2, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountNotBetween(Integer value1, Integer value2) {
			addCriterion("total_count not between", value1, value2,
					"totalCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountIsNull() {
			addCriterion("surplus_count is null");
			return (Criteria) this;
		}

		public Criteria andSurplusCountIsNotNull() {
			addCriterion("surplus_count is not null");
			return (Criteria) this;
		}

		public Criteria andSurplusCountEqualTo(Integer value) {
			addCriterion("surplus_count =", value, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountNotEqualTo(Integer value) {
			addCriterion("surplus_count <>", value, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountGreaterThan(Integer value) {
			addCriterion("surplus_count >", value, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("surplus_count >=", value, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountLessThan(Integer value) {
			addCriterion("surplus_count <", value, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountLessThanOrEqualTo(Integer value) {
			addCriterion("surplus_count <=", value, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountIn(List<Integer> values) {
			addCriterion("surplus_count in", values, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountNotIn(List<Integer> values) {
			addCriterion("surplus_count not in", values, "surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountBetween(Integer value1, Integer value2) {
			addCriterion("surplus_count between", value1, value2,
					"surplusCount");
			return (Criteria) this;
		}

		public Criteria andSurplusCountNotBetween(Integer value1, Integer value2) {
			addCriterion("surplus_count not between", value1, value2,
					"surplusCount");
			return (Criteria) this;
		}

		public Criteria andAwardUrlIsNull() {
			addCriterion("award_url is null");
			return (Criteria) this;
		}

		public Criteria andAwardUrlIsNotNull() {
			addCriterion("award_url is not null");
			return (Criteria) this;
		}

		public Criteria andAwardUrlEqualTo(String value) {
			addCriterion("award_url =", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlNotEqualTo(String value) {
			addCriterion("award_url <>", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlGreaterThan(String value) {
			addCriterion("award_url >", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlGreaterThanOrEqualTo(String value) {
			addCriterion("award_url >=", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlLessThan(String value) {
			addCriterion("award_url <", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlLessThanOrEqualTo(String value) {
			addCriterion("award_url <=", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlLike(String value) {
			addCriterion("award_url like", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlNotLike(String value) {
			addCriterion("award_url not like", value, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlIn(List<String> values) {
			addCriterion("award_url in", values, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlNotIn(List<String> values) {
			addCriterion("award_url not in", values, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlBetween(String value1, String value2) {
			addCriterion("award_url between", value1, value2, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andAwardUrlNotBetween(String value1, String value2) {
			addCriterion("award_url not between", value1, value2, "awardUrl");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<Date> values) {
			addCriterion("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<Date> values) {
			addCriterion("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityIsNull() {
			addCriterion("winning_probability is null");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityIsNotNull() {
			addCriterion("winning_probability is not null");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityEqualTo(Double value) {
			addCriterion("winning_probability =", value, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityNotEqualTo(Double value) {
			addCriterion("winning_probability <>", value, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityGreaterThan(Double value) {
			addCriterion("winning_probability >", value, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityGreaterThanOrEqualTo(Double value) {
			addCriterion("winning_probability >=", value, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityLessThan(Double value) {
			addCriterion("winning_probability <", value, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityLessThanOrEqualTo(Double value) {
			addCriterion("winning_probability <=", value, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityIn(List<Double> values) {
			addCriterion("winning_probability in", values, "winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityNotIn(List<Double> values) {
			addCriterion("winning_probability not in", values,
					"winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityBetween(Double value1,
				Double value2) {
			addCriterion("winning_probability between", value1, value2,
					"winningProbability");
			return (Criteria) this;
		}

		public Criteria andWinningProbabilityNotBetween(Double value1,
				Double value2) {
			addCriterion("winning_probability not between", value1, value2,
					"winningProbability");
			return (Criteria) this;
		}

		public Criteria andActivityDateIsNull() {
			addCriterion("activity_date is null");
			return (Criteria) this;
		}

		public Criteria andActivityDateIsNotNull() {
			addCriterion("activity_date is not null");
			return (Criteria) this;
		}

		public Criteria andActivityDateEqualTo(String value) {
			addCriterion("activity_date =", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotEqualTo(String value) {
			addCriterion("activity_date <>", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateGreaterThan(String value) {
			addCriterion("activity_date >", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateGreaterThanOrEqualTo(String value) {
			addCriterion("activity_date >=", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateLessThan(String value) {
			addCriterion("activity_date <", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateLessThanOrEqualTo(String value) {
			addCriterion("activity_date <=", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateLike(String value) {
			addCriterion("activity_date like", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotLike(String value) {
			addCriterion("activity_date not like", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateIn(List<String> values) {
			addCriterion("activity_date in", values, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotIn(List<String> values) {
			addCriterion("activity_date not in", values, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateBetween(String value1, String value2) {
			addCriterion("activity_date between", value1, value2,
					"activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotBetween(String value1, String value2) {
			addCriterion("activity_date not between", value1, value2,
					"activityDate");
			return (Criteria) this;
		}

		public Criteria andVersionIsNull() {
			addCriterion("version is null");
			return (Criteria) this;
		}

		public Criteria andVersionIsNotNull() {
			addCriterion("version is not null");
			return (Criteria) this;
		}

		public Criteria andVersionEqualTo(Integer value) {
			addCriterion("version =", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotEqualTo(Integer value) {
			addCriterion("version <>", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThan(Integer value) {
			addCriterion("version >", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
			addCriterion("version >=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThan(Integer value) {
			addCriterion("version <", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThanOrEqualTo(Integer value) {
			addCriterion("version <=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionIn(List<Integer> values) {
			addCriterion("version in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotIn(List<Integer> values) {
			addCriterion("version not in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionBetween(Integer value1, Integer value2) {
			addCriterion("version between", value1, value2, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotBetween(Integer value1, Integer value2) {
			addCriterion("version not between", value1, value2, "version");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table shop_activity_draw
	 * @mbggenerated  Mon Mar 28 19:06:06 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shop_activity_draw
     *
     * @mbggenerated do_not_delete_during_merge Mon Mar 28 18:14:22 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}